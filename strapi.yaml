apiVersion: v1
kind: ServiceAccount
metadata:
  name: strapi
  labels:
    app: strapi
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: strapi
  labels:
    app: strapi
rules:
- apiGroups:
  - ""
  resources:
  - configmap
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: strapi
  labels:
    app: strapi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: strapi
subjects:
- kind: ServiceAccount
  name: strapi
  namespace: orc
---
apiVersion: v1
kind: Service
metadata:
  name: strapi
  labels:
    app: strapi
spec:
  ports:
  - port: 80
    targetPort: 1337
    name: http
  selector:
    app: strapi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: strapi
spec:
  serviceName: "strapi"
  replicas: 1
  selector:
    matchLabels:
      app: strapi
  template:
    metadata:
      labels:
        app: strapi
    spec:
      serviceAccountName: strapi
      containers:
      - name: strapi
        image: strapi/strapi:3.0.0-beta.17.8
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "2Gi"
          limits:
            memory: "2Gi"
        ports:
        - containerPort: 1337
          name: http
        volumeMounts:
        - name: app
          mountPath: /srv/app
        # envFrom:
        # - configMapRef:
        #     name: strapi-env
      terminationGracePeriodSeconds: 60
      volumes:
      - name: app
        persistentVolumeClaim:
          claimName: app
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: app
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: 10Gi
